* TASKS

** TODO use _delete-pair_ to delete matching pairs on 
** TODO switch to modalka

** TODO implement convinient isearch

** TODO bind rect selection

** TODO get rid of annoying quirks
   - map russian characters
   - map capital charactes (?)
   - add more convinient bindings that exit modal state properly
   - all unused single-key presses are nil 

** DONE examine xah-fly-keys and steal good functions
     
   
* OLD BINDS
(defun trem-setup-keybinds ()
  "Set up default trem keybindings for normal mode."
  (global-subword-mode 1)

  ;; commands that are repeated for all cursors
  (trem-modal-keys

   (:mc-all t)

   ;; quit
   ("g" "C-g" :norepeat t)
   ("SPC g" "C-g" :name "abort" :norepeat t)

   
   ;; movement keys  
   ("i" previous-line :norepeat t)
   ("j" backward-char :norepeat t)
   ("k" next-line     :norepeat t)
   ("l" forward-char  :norepeat t)

   ("m" trem-backward-left-bracket :norepeat t)
   ("." trem-forward-right-bracket :norepeat t)
   ("," avy-goto-word-1 :norepeat t)

   ("u" backward-word :norepeat t)
   ("o" forward-word :norepeat t)

   ("h" trem-beginning-of-line-or-block)
   (";" trem-end-of-line-or-block)
   
   ;; alternative movement
   ("SPC" (("i" beginning-of-buffer :norepeat t)    
	   ("k" end-of-buffer :norepeat t)))
    
     
   ;; fast marking
   ("d" trem-toggle-mark :norepeat t)
   ("e" er/expand-region :norepeat t)
   ("7" trem-mark-line :norepeat t)
   ("8" trem-mark-block :norepeat t)
   ("9" mark-whole-buffer :norepeat t)
   
  
   ;; recenter/focus, scrolling
   ("a" recenter-top-bottom :norepeat t)
   ("-" trem-scroll-up :norepeat t)
   ("=" trem-scroll-down :norepeat t)

   ;; fast text manipulation
   ("/" trem-kill-forward :norepeat t :exit t)
   
   ("f" trem-kill-forward :norepeat t)
   ("s" trem-kill-backward :norepeat t)

   ("w" trem-kill-backward-bracket-text :norepeat t)
   ("r" trem-kill-forward-bracket-text  :norepeat t)

   ("c" kill-ring-save :norepeat t)
   ("v" yank :norepeat t)
   ("SPC v" yank-pop)
   ("t" undo :norepeat t)
   ("y" trem-modal-repeat :norepeat t)
   

   ;; editing, general text manipulation
   ("z" comment-region)
   ("SPC z" uncomment-region)
   

   ;; fast execution
   ("x" execute-extended-command)
   
   ;; slow execution
   ("SPC" (("x" (("s" trem-shell-pipe)
		 ("e" eshell)
		 ("b" eval-buffer)
		 ("r" eval-region)))))
   

   ;; unused keys are blocked
   ("b" nil :norepeat t)
   ("p" nil :norepeat t)
   ("q" nil :norepeat t))

  ;; commands that aren't repeated for each cursor
  (trem-modal-keys
   (:mc-all 0)
   
   ;; fast window management
   ("1" make-frame)
   ("2" delete-window)
   ("3" other-window :norepeat t)
   ("4" split-window-right :norepeat t)
   ("5" split-window-below :norepeat t)
   ("6" delete-other-windows :norepeat t)

   
   ;; fast buffer management
   ("n" trem-next-user-buffer :norepeat t)
   
   ;; slow buffer and file management
   ("SPC f" (("o" find-file)
	     ("d" dired)
	     ("l" list-buffers)
	     ("k" kill-buffer)
	     ("s" save-buffer)
	     ("j" switch-to-buffer)
	     ("i" save-some-buffers))
    :name "file/buffer")
   ))

* TODO KEYBINDINGS
** DONE PLAIN MAP
   Contains the most used commands, navigation and simple editing mostly.
** TODO SPC MAP
   Contains the most used commands which aren't related to navigation. 
   Put buffer saving, region evaluation, jumping etc here.
*** DONE yank-pop
*** DONE end of buffer
*** DONE beginning of buffer
*** DONE uncomment region 
*** DONE find-file
*** DONE jump to buffer
*** DONE kill buffer
*** DONE save buffer
*** DONE switch to buffer
*** DONE run eshell
*** DONE end of buffer
*** DONE beginning of buffer
*** DONE eval region (mode-dependent)
*** DONE compile/eval buffer (mode-dependent)

** TODO SPC c/, MAP
   Contains commands that are not used too often.

*** TODO open in new window
*** TODO save some buffers


** UNDECIDED
   hlt
   open kill ring
   list buffers
   regex replace

   mc/insert numbers
   enlage window 
   shrink window
   split line

   replace selection with killed text
   append to register
   paste from register
   clear register
   replace brackets
   reformat lines
   clean blank lines

** FREE KEYS (SPC)
   a
   b
   d
   g
   q
   w
   x
   y
   ,
   .
   0
   1
   2
   3
   4
   5
   6
   7
   8
   9


   
* TOOLS
  - phi-search
    https://github.com/zk-phi/phi-search
  - avy for fast navigation 
    works fine in modal mode
    https://github.com/abo-abo/avy
  - zones.el (?)
  https://www.emacswiki.org/emacs/Zones - persistent regions
* BOOKMARKS
  - https://github.com/clemera/objed
    - The expansion commands distinguish between block objects (objects built out of lines of text like paragraphs or text blocks with the same level of indentation and also comment blocks) and context objects (programming constructs like strings, brackets, comments or functions). This way you can quickly expand to the desired objects.


